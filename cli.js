#! /usr/bin/env node

"use strict";

var fs = require("fs"),
    path = require("path"),
    vm = require("vm"),
    nomnom = require("nomnom"),
    chalk = require("chalk"),
    beautify = require("js-beautify").js_beautify,
    json = require("./package.json"),
    parser = require("./src/parser");

var opts = nomnom
  .option("files", {
    position: 0,
    help: "files to compile",
    list: true
  })
  .option("compile", {
    abbr: "c",
    flag: true,
    help: "compile to JavaScript and save as .js files"
  })
  .option("verbose", {
    abbr: "v",
    flag: true,
    help: "verbose mode"
  })
  .option("version", {
    flag: true,
    help: "display the version number",
    callback: function () {
      return "version " + json.version;
    }
  })
  .parse();

if (!opts.files) {
  console.log(nomnom.getUsage());
  process.exit(0);
}

var problems = 0;

opts.files.forEach(function (fileName, fileIndex) {
  var baseName = path.basename(fileName);

  fs.readFile(baseName, "utf-8", function (error, content) {
    var generated = "// Generated by ASToJS v" + json.version + "\n" + "(function() {\n";
    generated += parser.parse(content);
    generated += "\n}());";
    generated = beautify(generated, { indent_size: 4 });
    var outFileNameWithoutExtension = fileName.substring(0, fileName.lastIndexOf('.'));    
    writeFile(outFileNameWithoutExtension + ".js", generated);
  });
});

function writeFile(fileName, content) {
  fs.writeFile(fileName, content, function (error) {
    if (error) {
      return console.log(error);
    }
  });
}
